{"version":3,"sources":["../../mail/timer.js"],"names":["schedule","require","Models","mailer","id_generator","scheduler","scheduleJob","Sondage","findOne","where","current","then","sondage","JourSondage","findOrCreate","date_emmission","Date","now","defaults","id","sondage_id","dataValues","nombre_emission","spread","jourSondage","created","console","log","User","findAll","users","forEach","data","token","generateJwt","diff","lastMailDate","mailIntensity","lastName","update","increment","module","exports"],"mappings":";;AAAA,IAAMA,QAAQ,GAAGC,OAAO,CAAC,eAAD,CAAxB;;AACA,IAAMC,MAAM,GAAGD,OAAO,CAAC,oBAAD,CAAtB;;AACA,IAAME,MAAM,GAAGF,OAAO,CAAC,UAAD,CAAtB;;AACA,IAAMG,YAAY,GAAGH,OAAO,CAAC,+BAAD,CAA5B;;AAEA,IAAMI,SAAS,GAAG,SAAZA,SAAY,GAAY;AAC5BL,EAAAA,QAAQ,CAACM,WAAT,CAAqB,aAArB,EAAoC,YAAM;AACxCJ,IAAAA,MAAM,CAACK,OAAP,CAAeC,OAAf,CAAuB;AAAEC,MAAAA,KAAK,EAAE;AAAEC,QAAAA,OAAO,EAAE;AAAX;AAAT,KAAvB,EAAqDC,IAArD,CAA0D,UAACC,OAAD,EAAa;AACrEV,MAAAA,MAAM,CAACW,WAAP,CAAmBC,YAAnB,CAAgC;AAC9BL,QAAAA,KAAK,EAAE;AAAEM,UAAAA,cAAc,EAAEC,IAAI,CAACC,GAAL;AAAlB,SADuB;AAE9BC,QAAAA,QAAQ,EAAE;AAAEC,UAAAA,EAAE,EAAEf,YAAY,EAAlB;AAAsBgB,UAAAA,UAAU,EAAER,OAAO,CAACS,UAAR,CAAmBF,EAArD;AAAyDG,UAAAA,eAAe,EAAE;AAA1E;AAFoB,OAAhC,EAGGC,MAHH,CAGU,UAACC,WAAD,EAAcC,OAAd,EAA0B;AAClCC,QAAAA,OAAO,CAACC,GAAR,CAAY,wCAAZ,EAAsDF,OAAtD;AACAvB,QAAAA,MAAM,CAAC0B,IAAP,CAAYC,OAAZ,GAAsBlB,IAAtB,CAA2B,UAACmB,KAAD,EAAW;AACpCA,UAAAA,KAAK,CAACC,OAAN,CAAc,UAACC,IAAD,EAAU;AACtB,gBAAMZ,UAAU,GAAGR,OAAO,CAACS,UAAR,CAAmBF,EAAtC;AACA,gBAAMc,KAAK,GAAGD,IAAI,CAACE,WAAL,CAAiBd,UAAjB,CAAd;AACA,gBAAMe,IAAI,GAAGnB,IAAI,CAACC,GAAL,KAAae,IAAI,CAACX,UAAL,CAAgBe,YAA1C;;AACA,gBAAIJ,IAAI,CAACX,UAAL,CAAgBgB,aAAhB,GAAgCF,IAAI,IAAI,OAAO,EAAP,GAAY,EAAZ,GAAiB,EAArB,CAAJ,GAA+B,GAAnE,EAAwE;AACtET,cAAAA,OAAO,CAACC,GAAR,4BAAgCK,IAAI,CAACX,UAAL,CAAgBiB,QAAhD;AACAnC,cAAAA,MAAM,CAAC6B,IAAI,CAACX,UAAN,EAAkBY,KAAlB,CAAN;AACA/B,cAAAA,MAAM,CAAC0B,IAAP,CAAYW,MAAZ,CACE;AAAEH,gBAAAA,YAAY,EAAEpB,IAAI,CAACC,GAAL;AAAhB,eADF,EAEE;AAAER,gBAAAA,KAAK,EAAE;AAAEU,kBAAAA,EAAE,EAAEa,IAAI,CAACX,UAAL,CAAgBF;AAAtB;AAAT,eAFF;AAIAK,cAAAA,WAAW,CAACgB,SAAZ,CAAsB;AAAElB,gBAAAA,eAAe,EAAE;AAAnB,eAAtB;AACD;AACF,WAbD;AAcD,SAfD;AAgBD,OArBD;AAsBD,KAvBD;AAwBA;AACD,GA1BD;AA2BD,CA5BD;;AA6BAmB,MAAM,CAACC,OAAP,GAAiBrC,SAAjB","sourcesContent":["const schedule = require('node-schedule');\nconst Models = require('../models/index.js');\nconst mailer = require('./mailer');\nconst id_generator = require('../custom_module/id_generator');\n\nconst scheduler = function () {\n  schedule.scheduleJob('0 * * * * *', () => {\n    Models.Sondage.findOne({ where: { current: true } }).then((sondage) => {\n      Models.JourSondage.findOrCreate({ \n        where: { date_emmission: Date.now() },\n        defaults: { id: id_generator(), sondage_id: sondage.dataValues.id, nombre_emission: 0 }, \n      }).spread((jourSondage, created) => {\n        console.log(\"Is this the first Sondage sent today: \", created);\n        Models.User.findAll().then((users) => {\n          users.forEach((data) => {\n            const sondage_id = sondage.dataValues.id;\n            const token = data.generateJwt(sondage_id);\n            const diff = Date.now() - data.dataValues.lastMailDate;\n            if (data.dataValues.mailIntensity < diff / (1000 * 60 * 60 * 24) + 0.4) {\n              console.log(`Sending mail to: ${data.dataValues.lastName}`);\n              mailer(data.dataValues, token);\n              Models.User.update(\n                { lastMailDate: Date.now() },\n                { where: { id: data.dataValues.id } },\n              );\n              jourSondage.increment({ nombre_emission: 1 });\n            }\n          });\n        });\n      });\n    });\n    /**/\n  });\n};\nmodule.exports = scheduler;\n"],"file":"timer.js"}