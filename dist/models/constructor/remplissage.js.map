{"version":3,"sources":["../../../models/constructor/remplissage.js"],"names":["Sequelize","require","remplissageConstructor","sequelize","Remplissage","define","id","allowNull","type","STRING","primaryKey","sondage_id","user_id","date","DATEONLY","timestamps","addRemplissage","Promise","resolve","sync","then","create","module","exports"],"mappings":";;AAAA,IAAMA,SAAS,GAAGC,OAAO,CAAC,WAAD,CAAzB;;AAEA,IAAMC,sBAAsB,GAAG,SAAzBA,sBAAyB,CAAUC,SAAV,EAAqB;AAClD,MAAMC,WAAW,GAAGD,SAAS,CAACE,MAAV,CAAiB,aAAjB,EAAgC;AAClDC,IAAAA,EAAE,EAAE;AACFC,MAAAA,SAAS,EAAE,KADT;AAEFC,MAAAA,IAAI,EAAER,SAAS,CAACS,MAFd;AAGFC,MAAAA,UAAU,EAAE;AAHV,KAD8C;AAMlDC,IAAAA,UAAU,EAAE;AACVJ,MAAAA,SAAS,EAAE,KADD;AAEVC,MAAAA,IAAI,EAAER,SAAS,CAACS;AAFN,KANsC;AAUlDG,IAAAA,OAAO,EAAE;AACPL,MAAAA,SAAS,EAAE,KADJ;AAEPC,MAAAA,IAAI,EAAER,SAAS,CAACS;AAFT,KAVyC;AAclDI,IAAAA,IAAI,EAAE;AACJN,MAAAA,SAAS,EAAE,KADP;AAEJC,MAAAA,IAAI,EAAER,SAAS,CAACc;AAFZ;AAd4C,GAAhC,EAkBjB;AACDC,IAAAA,UAAU,EAAE;AADX,GAlBiB,CAApB;;AAsBAX,EAAAA,WAAW,CAACY,cAAZ,GAA6B,UAAUV,EAAV,EAAcK,UAAd,EAA0BC,OAA1B,EAAmCC,IAAnC,EAAyC;AACpE,WAAO,IAAII,OAAJ,CAAY,UAAUC,OAAV,EAAmB;AACpCd,MAAAA,WAAW,CAACe,IAAZ,GAAmBC,IAAnB,CAAwB,YAAM;AAC5BhB,QAAAA,WAAW,CAACiB,MAAZ,CAAmB;AACjBf,UAAAA,EAAE,EAAEA,EADa;AAEjBM,UAAAA,OAAO,EAAEA,OAFQ;AAGjBD,UAAAA,UAAU,EAAEA,UAHK;AAIjBE,UAAAA,IAAI,EAAEA;AAJW,SAAnB,EAKGO,IALH,CAKQ,YAAM;AACZF,UAAAA,OAAO;AACR,SAPD;AAQD,OATD;AAUD,KAXM,CAAP;AAYD,GAbD;;AAcA,SAAOd,WAAP;AACD,CAtCD;;AAwCAkB,MAAM,CAACC,OAAP,GAAiBrB,sBAAjB","sourcesContent":["const Sequelize = require('sequelize');\n\nconst remplissageConstructor = function (sequelize) {\n  const Remplissage = sequelize.define('remplissage', {\n    id: {\n      allowNull: false,\n      type: Sequelize.STRING,\n      primaryKey: true,\n    },\n    sondage_id: {\n      allowNull: false,\n      type: Sequelize.STRING,\n    },\n    user_id: {\n      allowNull: false,\n      type: Sequelize.STRING,\n    },\n    date: {\n      allowNull: false,\n      type: Sequelize.DATEONLY,\n    },\n  }, {\n    timestamps: false,\n  });\n  \n  Remplissage.addRemplissage = function (id, sondage_id, user_id, date) {\n    return new Promise(function (resolve) {\n      Remplissage.sync().then(() => {\n        Remplissage.create({\n          id: id,\n          user_id: user_id,\n          sondage_id: sondage_id,\n          date: date,\n        }).then(() => {\n          resolve();\n        });\n      });\n    });\n  };\n  return Remplissage;\n};\n\nmodule.exports = remplissageConstructor;"],"file":"remplissage.js"}