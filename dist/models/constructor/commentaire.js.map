{"version":3,"sources":["../../../models/constructor/commentaire.js"],"names":["Sequelize","require","id_generator","commentaireConstructor","sequelize","Commentaire","define","id","allowNull","type","STRING","primaryKey","remplissage_id","thematique_id","commentaire","timestamps","addCommentaire","Promise","resolve","sync","then","create","updateCommentaire","commentaire_id","newCommentaire","update","where","module","exports"],"mappings":";;AAAA,IAAMA,SAAS,GAAGC,OAAO,CAAC,WAAD,CAAzB;;AACA,IAAMC,YAAY,GAAGD,OAAO,CAAC,kCAAD,CAA5B;;AAEA,IAAME,sBAAsB,GAAG,SAAzBA,sBAAyB,CAAUC,SAAV,EAAqB;AAClD,MAAMC,WAAW,GAAGD,SAAS,CAACE,MAAV,CAAiB,aAAjB,EAAgC;AAClDC,IAAAA,EAAE,EAAE;AACFC,MAAAA,SAAS,EAAE,KADT;AAEFC,MAAAA,IAAI,EAAET,SAAS,CAACU,MAFd;AAGFC,MAAAA,UAAU,EAAE;AAHV,KAD8C;AAMlDC,IAAAA,cAAc,EAAE;AACdJ,MAAAA,SAAS,EAAE,KADG;AAEdC,MAAAA,IAAI,EAAET,SAAS,CAACU;AAFF,KANkC;AAUlDG,IAAAA,aAAa,EAAE;AACbL,MAAAA,SAAS,EAAE,KADE;AAEbC,MAAAA,IAAI,EAAET,SAAS,CAACU;AAFH,KAVmC;AAclDI,IAAAA,WAAW,EAAE;AACXN,MAAAA,SAAS,EAAE,KADA;AAEXC,MAAAA,IAAI,EAAET,SAAS,CAACU;AAFL;AAdqC,GAAhC,EAkBjB;AACDK,IAAAA,UAAU,EAAE;AADX,GAlBiB,CAApB;;AAqBAV,EAAAA,WAAW,CAACW,cAAZ,GAA6B,UAAUJ,cAAV,EAA0BC,aAA1B,EAAyCC,WAAzC,EAAsD;AACjF,WAAO,IAAIG,OAAJ,CAAY,UAAUC,OAAV,EAAmB;AACpCb,MAAAA,WAAW,CAACc,IAAZ,GAAmBC,IAAnB,CAAwB,YAAM;AAC5Bf,QAAAA,WAAW,CAACgB,MAAZ,CAAmB;AACjBd,UAAAA,EAAE,EAAEL,YAAY,EADC;AAEjBU,UAAAA,cAAc,EAAEA,cAFC;AAGjBC,UAAAA,aAAa,EAAEA,aAHE;AAIjBC,UAAAA,WAAW,EAAEA;AAJI,SAAnB,EAKGM,IALH,CAKQ,YAAM;AACZF,UAAAA,OAAO;AACR,SAPD;AAQD,OATD;AAUD,KAXM,CAAP;AAYD,GAbD;;AAeAb,EAAAA,WAAW,CAACiB,iBAAZ,GAAgC,UAAUC,cAAV,EAA0BC,cAA1B,EAA0C;AACxEnB,IAAAA,WAAW,CAACoB,MAAZ,CACE;AAAEX,MAAAA,WAAW,EAAEU;AAAf,KADF,EAEE;AAAEE,MAAAA,KAAK,EAAE;AAAEnB,QAAAA,EAAE,EAAEgB;AAAN;AAAT,KAFF;AAID,GALD;;AAMA,SAAOlB,WAAP;AACD,CA5CD;;AA8CAsB,MAAM,CAACC,OAAP,GAAiBzB,sBAAjB","sourcesContent":["const Sequelize = require('sequelize');\nconst id_generator = require('../../custom_module/id_generator');\n\nconst commentaireConstructor = function (sequelize) {\n  const Commentaire = sequelize.define('commentaire', {\n    id: {\n      allowNull: false,\n      type: Sequelize.STRING,\n      primaryKey: true,\n    },\n    remplissage_id: {\n      allowNull: false,\n      type: Sequelize.STRING,\n    },\n    thematique_id: {\n      allowNull: false,\n      type: Sequelize.STRING,\n    },\n    commentaire: {\n      allowNull: false,\n      type: Sequelize.STRING,\n    },\n  }, {\n    timestamps: false,\n  });\n  Commentaire.addCommentaire = function (remplissage_id, thematique_id, commentaire) {\n    return new Promise(function (resolve) {\n      Commentaire.sync().then(() => {\n        Commentaire.create({\n          id: id_generator(),\n          remplissage_id: remplissage_id,\n          thematique_id: thematique_id,\n          commentaire: commentaire,\n        }).then(() => {\n          resolve();\n        });\n      });\n    });\n  };\n\n  Commentaire.updateCommentaire = function (commentaire_id, newCommentaire) {\n    Commentaire.update(\n      { commentaire: newCommentaire },\n      { where: { id: commentaire_id } },\n    );\n  };\n  return Commentaire;\n};\n\nmodule.exports = commentaireConstructor;"],"file":"commentaire.js"}