{"version":3,"sources":["../../../models/constructor/reponse.js"],"names":["Sequelize","require","id_generator","reponseConstructor","sequelize","Reponse","define","id","allowNull","type","STRING","primaryKey","remplissage_id","question_id","valeur","INTEGER","timestamps","addReponse","Promise","resolve","sync","then","create","updateReponse","reponse_id","newValeur","update","where","module","exports"],"mappings":";;AAAA,IAAMA,SAAS,GAAGC,OAAO,CAAC,WAAD,CAAzB;;AACA,IAAMC,YAAY,GAAGD,OAAO,CAAC,kCAAD,CAA5B;;AAEA,IAAME,kBAAkB,GAAG,SAArBA,kBAAqB,CAAUC,SAAV,EAAqB;AAC9C,MAAMC,OAAO,GAAGD,SAAS,CAACE,MAAV,CAAiB,SAAjB,EAA4B;AAC1CC,IAAAA,EAAE,EAAE;AACFC,MAAAA,SAAS,EAAE,KADT;AAEFC,MAAAA,IAAI,EAAET,SAAS,CAACU,MAFd;AAGFC,MAAAA,UAAU,EAAE;AAHV,KADsC;AAM1CC,IAAAA,cAAc,EAAE;AACdJ,MAAAA,SAAS,EAAE,KADG;AAEdC,MAAAA,IAAI,EAAET,SAAS,CAACU;AAFF,KAN0B;AAU1CG,IAAAA,WAAW,EAAE;AACXL,MAAAA,SAAS,EAAE,KADA;AAEXC,MAAAA,IAAI,EAAET,SAAS,CAACU;AAFL,KAV6B;AAc1CI,IAAAA,MAAM,EAAE;AACNN,MAAAA,SAAS,EAAE,KADL;AAENC,MAAAA,IAAI,EAAET,SAAS,CAACe;AAFV;AAdkC,GAA5B,EAkBb;AACDC,IAAAA,UAAU,EAAE;AADX,GAlBa,CAAhB;;AAqBAX,EAAAA,OAAO,CAACY,UAAR,GAAqB,UAAUL,cAAV,EAA0BC,WAA1B,EAAuCC,MAAvC,EAA+C;AAClE,WAAO,IAAII,OAAJ,CAAY,UAAUC,OAAV,EAAmB;AACpCd,MAAAA,OAAO,CAACe,IAAR,GAAeC,IAAf,CAAoB,YAAM;AACxBhB,QAAAA,OAAO,CAACiB,MAAR,CAAe;AACbf,UAAAA,EAAE,EAAEL,YAAY,EADH;AAEbU,UAAAA,cAAc,EAAEA,cAFH;AAGbC,UAAAA,WAAW,EAAEA,WAHA;AAIbC,UAAAA,MAAM,EAAEA;AAJK,SAAf,EAKGO,IALH,CAKQ,YAAM;AACZF,UAAAA,OAAO;AACR,SAPD;AAQD,OATD;AAUD,KAXM,CAAP;AAYD,GAbD;;AAeAd,EAAAA,OAAO,CAACkB,aAAR,GAAwB,UAAUC,UAAV,EAAsBC,SAAtB,EAAiC;AACvDpB,IAAAA,OAAO,CAACqB,MAAR,CACE;AAAEZ,MAAAA,MAAM,EAAEW;AAAV,KADF,EAEE;AAAEE,MAAAA,KAAK,EAAE;AAAEpB,QAAAA,EAAE,EAAEiB;AAAN;AAAT,KAFF;AAID,GALD;;AAMA,SAAOnB,OAAP;AACD,CA5CD;;AA8CAuB,MAAM,CAACC,OAAP,GAAiB1B,kBAAjB","sourcesContent":["const Sequelize = require('sequelize');\nconst id_generator = require('../../custom_module/id_generator');\n\nconst reponseConstructor = function (sequelize) {\n  const Reponse = sequelize.define('reponse', {\n    id: {\n      allowNull: false,\n      type: Sequelize.STRING,\n      primaryKey: true,\n    },\n    remplissage_id: {\n      allowNull: false,\n      type: Sequelize.STRING,\n    },\n    question_id: {\n      allowNull: false,\n      type: Sequelize.STRING,\n    },\n    valeur: {\n      allowNull: false,\n      type: Sequelize.INTEGER,\n    },\n  }, {\n    timestamps: false,\n  });\n  Reponse.addReponse = function (remplissage_id, question_id, valeur) {\n    return new Promise(function (resolve) {\n      Reponse.sync().then(() => {\n        Reponse.create({\n          id: id_generator(),\n          remplissage_id: remplissage_id,\n          question_id: question_id,\n          valeur: valeur,\n        }).then(() => {\n          resolve();\n        });\n      });\n    });\n  };\n\n  Reponse.updateReponse = function (reponse_id, newValeur) {\n    Reponse.update(\n      { valeur: newValeur },\n      { where: { id: reponse_id } },\n    );\n  };\n  return Reponse;\n};\n\nmodule.exports = reponseConstructor;"],"file":"reponse.js"}