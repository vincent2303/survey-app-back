{"version":3,"sources":["../app.js"],"names":["express","require","http","cors","session","FileStore","passport","cookieParser","env","scheduler","id_generator","adminRouter","surveyRouter","userRouter","loginRouter","app","console","log","corsOptions","origin","credentials","use","static","json","urlencoded","extended","session_secret_key","genid","req","sessionID","store","secret","resave","saveUninitialized","cookie","maxAge","initialize","set","port","server","createServer","listen","module","exports"],"mappings":"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","sourcesContent":["const express = require('express');\nconst http = require('http');\nconst cors = require('cors');\nconst session = require('express-session');\nconst FileStore = require('session-file-store')(session);\nconst passport = require('passport');\nconst cookieParser = require('cookie-parser');\n\nconst env = require('./const');\nconst scheduler = require('./mail/timer.js');\nconst id_generator = require('./custom_module/id_generator');\n\nconst adminRouter = require('./routes/admin');\nconst surveyRouter = require('./routes/survey');\nconst userRouter = require('./routes/user');\nconst loginRouter = require('./routes/login');\n\nconst app = express();\n\nconsole.log('Starting scheduler');\nscheduler();\n\nconst corsOptions = {\n  origin: 'http://localhost:3000',\n  credentials: true,\n};\n\napp.use(express.static('public'));\n\napp.use(cors(corsOptions));\napp.use(express.json());\napp.use(express.urlencoded({ extended: false }));\napp.use(cookieParser(env.session_secret_key));\napp.use(session({\n  genid: (req) => {\n    console.log('Inside the session middleware');\n    console.log(req.sessionID);\n    return id_generator(); // use UUIDs for session IDs\n  },\n  store: new FileStore(),\n  secret: env.session_secret_key,\n  resave: false,\n  saveUninitialized: true,\n  cookie: { maxAge: 2419200000 },\n}));\napp.use(passport.initialize());\napp.use(passport.session());\n\napp.use('/survey', surveyRouter);\napp.use('/login', loginRouter);\napp.use('/user', userRouter);\napp.use('/admin', adminRouter);\n\napp.set('port', env.port);\n\nconst server = http.createServer(app);\n\nconsole.log(`server starting on port: 4200`);\nserver.listen(env.port);\n\nmodule.exports = app;\n"],"file":"app.js"}